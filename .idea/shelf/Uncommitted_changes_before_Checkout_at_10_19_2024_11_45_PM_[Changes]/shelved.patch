Index: codeCainUmlEditor/src/main/Java/Relationship.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.util.HashSet;\r\n\r\npublic class Relationship {\r\n\r\n    /**\r\n     * Set with 2 class names that will be in the relationship\r\n     */\r\n    private Collection<String> classNames;\r\n\r\n\r\n    /**\r\n     * arraylist for every single relationship created.\r\n     * This is a static list, so every relationship created only exists in this list\r\n     */\r\n    public static final ArrayList<Relationship> relationshipList = new ArrayList<Relationship>();\r\n\r\n\r\n    /**\r\n     * constructor for relationship class. This is private\r\n     * and is only used by the addRelationship method\r\n     * @param class1 name of first class to add\r\n     * @param class2 name of second class to add\r\n     */\r\n    private Relationship(String class1, String class2){\r\n        this.classNames = new HashSet<String>();\r\n        classNames.add(class1);\r\n        classNames.add(class2);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * deletes all relationships that contain the specified class\r\n     */\r\n    public static void removeAttachedRelationships(String className /*, Classes classes*/) /*throws Exception*/ {\r\n        //if(!classes.classExists(className)) throw new Exception(\"class not found\");\r\n        relationshipList.removeIf(r -> r.classNames.contains(className));\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if the relationship already exists\r\n     * @param class1 class to look for\r\n     * @return true if there is a relationship with that class\r\n     */\r\n    public static boolean relationshipExists(String class1){\r\n        for (Relationship r : relationshipList){\r\n            if (r.classNames.contains(class1))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * relationshipExists\r\n     * checks if the relationship already exists\r\n     * @param class1 first class\r\n     * @param class2 second class\r\n     * @return true if the relationship exists\r\n     */\r\n    public static boolean relationshipExists(String class1, String class2){\r\n        for (Relationship r: relationshipList){\r\n            if (\r\n                    r.classNames.contains(class1)\r\n                            && r.classNames.contains(class2)\r\n            )\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * helper method to check if both classes exists and dont already have a relationship\r\n     * @param class1 first class\r\n     * @param class2 second class\r\n     * @return true if entry is valid\r\n     */\r\n    private static boolean entryIsValid(String class1, String class2){\r\n        return !relationshipExists(class1,class2)\r\n                && Class.classMap.containsKey(class1)\r\n                && Class.classMap.containsKey(class2);\r\n    }\r\n\r\n    /**\r\n     * adds a relationship to the relationship map\r\n     * @param class1 the first class to add\r\n     * @param class2 the second class to add\r\n     * @throws Exception if a class entered doesn't exist\r\n     */\r\n    public static void addRelationship(String class1, String class2) throws Exception {\r\n\r\n        boolean isValid = entryIsValid(class1, class2);\r\n\r\n        if(!isValid) throw new Exception(\"invalid entry\");\r\n\r\n        Relationship newRelationship = new Relationship(class1, class2);\r\n\r\n        relationshipList.add(newRelationship);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * adds a relationship to the relationship map\r\n     * @param class1 the first class to add\r\n     * @param class2 the second class to add\r\n     * @throws Exception if a class entered doesn't exist\r\n     */\r\n    public static void removeRelationship(String class1, String class2) throws Exception {\r\n\r\n        for (Relationship r : relationshipList){\r\n            if (r.classNames.contains(class1)\r\n                && r.classNames.contains(class2))\r\n            {\r\n                relationshipList.remove(r);\r\n                return;\r\n            }\r\n        }\r\n        throw new Exception(\"relationship not found\");\r\n    }\r\n\r\n\r\n    /**\r\n     * takes the list of relationships and returns it as a string\r\n     * @return String - the list of relationships\r\n     */\r\n    public static String listToString() throws Exception {\r\n        if (relationshipList.isEmpty()) return \"\";\r\n        StringBuilder s = new StringBuilder();\r\n        for (Relationship r: relationshipList){\r\n            String[] names = r.getClassNames();\r\n\r\n            if (names.length < 2) throw new Exception(\"no classes found\");\r\n\r\n            s.append(names[0]).append(\" ------- \").append(names[1]).append(\"\\n\");\r\n        }\r\n        return s.toString();\r\n    }\r\n\r\n\r\n    /**\r\n     * renames a class in a relationship\r\n     * @param oldName name to replace\r\n     * @param newName name to replace with\r\n     */\r\n    public static void renameClassInRelationships(String oldName, String newName) throws Exception {\r\n        if (!relationshipExists(oldName)) throw new Exception(\"relationship does not exist\");\r\n        for (Relationship r : relationshipList){\r\n            if (r.classNames.contains(oldName)){\r\n                r.classNames.remove(oldName);\r\n                r.classNames.add(newName);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * helper method to get the names of the classes in the relationship in an\r\n     * array\r\n     * @return String[]\r\n     */\r\n    private String[] getClassNames(){\r\n        String[] names = new String[2];\r\n        this.classNames.toArray(names);\r\n        return names;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/codeCainUmlEditor/src/main/Java/Relationship.java b/codeCainUmlEditor/src/main/Java/Relationship.java
--- a/codeCainUmlEditor/src/main/Java/Relationship.java	
+++ b/codeCainUmlEditor/src/main/Java/Relationship.java	
@@ -89,13 +89,12 @@
      * adds a relationship to the relationship map
      * @param class1 the first class to add
      * @param class2 the second class to add
-     * @throws Exception if a class entered doesn't exist
      */
-    public static void addRelationship(String class1, String class2) throws Exception {
+    public static void addRelationship(String class1, String class2) {
 
         boolean isValid = entryIsValid(class1, class2);
 
-        if(!isValid) throw new Exception("invalid entry");
+        if(!isValid) throw new IllegalArgumentException("invalid entry");
 
         Relationship newRelationship = new Relationship(class1, class2);
 
@@ -110,7 +109,7 @@
      * @param class2 the second class to add
      * @throws Exception if a class entered doesn't exist
      */
-    public static void removeRelationship(String class1, String class2) throws Exception {
+    public static void removeRelationship(String class1, String class2) throws IllegalArgumentException {
 
         for (Relationship r : relationshipList){
             if (r.classNames.contains(class1)
@@ -120,7 +119,7 @@
                 return;
             }
         }
-        throw new Exception("relationship not found");
+        throw new IllegalArgumentException("relationship not found");
     }
 
 
@@ -128,13 +127,13 @@
      * takes the list of relationships and returns it as a string
      * @return String - the list of relationships
      */
-    public static String listToString() throws Exception {
+    public static String listToString() throws IllegalArgumentException {
         if (relationshipList.isEmpty()) return "";
         StringBuilder s = new StringBuilder();
         for (Relationship r: relationshipList){
             String[] names = r.getClassNames();
 
-            if (names.length < 2) throw new Exception("no classes found");
+            if (names.length < 2) throw new IllegalArgumentException("no classes found");
 
             s.append(names[0]).append(" ------- ").append(names[1]).append("\n");
         }
@@ -148,7 +147,7 @@
      * @param newName name to replace with
      */
     public static void renameClassInRelationships(String oldName, String newName) throws Exception {
-        if (!relationshipExists(oldName)) throw new Exception("relationship does not exist");
+        if (!relationshipExists(oldName)) throw new IllegalArgumentException("relationship does not exist");
         for (Relationship r : relationshipList){
             if (r.classNames.contains(oldName)){
                 r.classNames.remove(oldName);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ArtifactsWorkspaceSettings\">\r\n    <artifacts-to-build>\r\n      <artifact name=\"cscd350-f24-CodeCain:jar2\" />\r\n    </artifacts-to-build>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d97d09b8-ce59-4ac2-b037-c5781ec0cb86\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/artifacts/cscd350_f24_CodeCain_jar2.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/artifacts/cscd350_f24_CodeCain_jar2.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/cscd350-f24-CodeCain.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/cscd350-f24-CodeCain.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/encodings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Group Roles.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Group Roles.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/README.md\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/README.md\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/.gitignore\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/.gitignore\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/.idea/.gitignore\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/.idea/.gitignore\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Class.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Class.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Fields.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Fields.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/GUI.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/GUI.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/META-INF/MANIFEST.MF\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/META-INF/MANIFEST.MF\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Methods.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Methods.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Relationship.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Relationship.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/ClassTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/ClassTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/DemoTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/DemoTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/TestUML.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/TestUML.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/relationshiptests.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/relationshiptests.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"GUI\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;mmoua10&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/hbarton2/cscd350-f24-CodeCain.git&quot;,\r\n    &quot;accountId&quot;: &quot;7fdd8494-9a35-4afc-b214-b8b763403f8a&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nE1OX0rMrspIdXtfWp05ZmhCW0\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.GUI.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;Develop&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Michelle/Documents/School/year 4/CSCD350/projects/cscd350-f24-CodeCain&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Artifacts&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Michelle\\Documents\\School\\year 4\\CSCD350\\projects\\cscd350-f24-CodeCain\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"GUI\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"GUI\" />\r\n      <module name=\"cscd350-f24-CodeCain\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.GUI\" />\r\n        <item itemvalue=\"Application.GUI\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d97d09b8-ce59-4ac2-b037-c5781ec0cb86\" name=\"Changes\" comment=\"\" />\r\n      <created>1728523393017</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1728523393017</updated>\r\n      <workItem from=\"1728523394606\" duration=\"14000\" />\r\n      <workItem from=\"1728523425276\" duration=\"95000\" />\r\n      <workItem from=\"1728874546267\" duration=\"85000\" />\r\n      <workItem from=\"1728874699646\" duration=\"30000\" />\r\n      <workItem from=\"1728925383070\" duration=\"6363000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -10,32 +10,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="d97d09b8-ce59-4ac2-b037-c5781ec0cb86" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/artifacts/cscd350_f24_CodeCain_jar2.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/artifacts/cscd350_f24_CodeCain_jar2.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/cscd350-f24-CodeCain.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/cscd350-f24-CodeCain.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/uiDesigner.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Group Roles.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Group Roles.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/.gitignore" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/.idea/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/.idea/.gitignore" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/.idea/vcs.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Class.java" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Class.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Fields.java" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Fields.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/GUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/GUI.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/META-INF/MANIFEST.MF" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/META-INF/MANIFEST.MF" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Methods.java" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Methods.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Relationship.java" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Java/Relationship.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/ClassTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/ClassTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/DemoTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/DemoTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/TestUML.java" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/TestUML.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/relationshiptests.java" beforeDir="false" afterPath="$PROJECT_DIR$/codeCainUmlEditor/src/main/Test/relationshiptests.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -71,27 +48,28 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.GUI.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;Develop&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/Michelle/Documents/School/year 4/CSCD350/projects/cscd350-f24-CodeCain&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Artifacts&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.GUI.executor": "Run",
+    "Application.Main.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "Develop",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/Users/Michelle/Documents/School/year 4/CSCD350/projects/cscd350-f24-CodeCain",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Artifacts",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "preferences.keymap",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\Michelle\Documents\School\year 4\CSCD350\projects\cscd350-f24-CodeCain" />
